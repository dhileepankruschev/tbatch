<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd">

	 <!-- FlatFileItemReader identifies data fields from file lines -->
 	<bean id="readWithBeanWrapperFieldSetMapper" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:input/character-separated-product" />
		<property name="linesToSkip" value="2" />
		<property name="comments" value="@"/>
		<property name="recordSeparatorPolicy" ref="productRecordSeparatorPolicy"/>
		<property name="lineMapper" ref="productLineMapper"/>
	</bean>

	<!-- RecordSeparatorPolicy interface identifies and delimits records in a file -->
	<bean id="productRecordSeparatorPolicy" class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
	
	<!-- The LineMapper interface is responsible for extracting data from lines -->
	<bean id="productLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
 		<property name="lineTokenizer" ref="productLineTokenizer"/> 
		<property name="fieldSetMapper" ref="productFieldSetMapper"/>
	</bean>
	
	<!-- LineMapper Maps a data line to a data object -->
	<bean id="productLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="delimiter" value=","/>
		<property name="names" value="ID, NAME,DESCRIPTION,PRICE" />
	</bean>
	
	<!-- FieldSetMapper creates a data object from tokens -->
	<bean id="productFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="product"/>
	</bean>
	<bean id="product" class="com.ds.Product" scope="prototype"/>

</beans>