<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd">
		
	<import resource="../config/datasource-config.xml" />
	<import resource="../config/job-context.xml" />
	

	<!-- Spring Batch namespace as the default namespace -->	
	
 	<job id="importProducts" job-repository="jobRepository" xmlns="http://www.springframework.org/schema/batch">
 	
 	
		<step id="readWriteProducts">
			<tasklet>
				<chunk reader="reader" writer="writer" commit-interval="100" skip-limit="2">
					<skippable-exception-classes>
						<include class="org.springframework.batch.item.file.FlatFileParseException" />
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
	</job>

	
	
	<!-- Spring Batch XML namespace and prefix -->
<!-- 	
 	<batch:job id="importProducts">
 	
 	
		<batch:step id="readWriteProducts">
			<batch:tasklet>
				<batch:chunk reader="reader" writer="writer" commit-interval="100" skip-limit="2">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
 -->
 	<bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:input/csv/product.csv" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="PRODUCT_ID, NAME,DESCRIPTION,PRICE" />
						<property name="delimiter" value="," />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.ds.ProductFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

 	<bean id="writer" class="com.ds.ProductJdbcItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>

</beans>